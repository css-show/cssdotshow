# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ feature/remix ]
  pull_request:
    branches: [ feature/remix ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # container:
      # image: tencentcloudbase/cloudbase-framework-runner:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.4.0
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v2.0.1
        with:
          version: latest

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'pnpm'
          
      - name: Setup npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
        
      - name: Install Dependencies
        run: pnpm install
        
      - name: Global install CloudBase-Cli
        run: pnpm add --global @cloudbase/cli

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm version-packages
          publish: pnpm release
          # cwd: '/build'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Login to Tencent CloudBase
        env:
          SECRET_ID: ${{secrets.secretId}}
          SECRET_KEY: ${{secrets.secretKey}}
        run: tcb login --apiKeyId "$SECRET_ID" --apiKey "$SECRET_KEY"
          
      - run: cd packages/web
      
      - name: Deploy to Tencent CloudBase
        env:
          ENV_ID: ${{secrets.envId}}
        run: tcb framework deploy -e "$ENV_ID"
